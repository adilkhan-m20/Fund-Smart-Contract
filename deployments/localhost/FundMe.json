{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe_NotOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawA",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0xc7fde2d5a9902d5fe0d75e07aa954e17d04592816d1f6683bb73831c77f36097",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "626199",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x4c5aa2133fafabff931e6167703a74c5935f8cafe31ca02f46b576f64911a0b4",
    "transactionHash": "0xc7fde2d5a9902d5fe0d75e07aa954e17d04592816d1f6683bb73831c77f36097",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "626199",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "cdb5b0a52b29ce21dcb635ae6b948d10",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe_NotOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawA\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/*interface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData( uint80 _roundId) external view returns (\\n    uint80 roundId, \\n    int256 answer,\\n     uint256 startedAt, \\n    uint256 updatedAt,\\n     uint80 answeredInRound\\n     );\\n\\n  function latestRoundData() external view returns (\\n    uint80 roundId,\\n     int256 answer,\\n      uint256 startedAt, \\n      uint256 updatedAt, \\n      uint80 answeredInRound\\n      );\\n}\\n*/\\nimport \\\"./PriceConverter.sol\\\";\\nerror FundMe_NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address public immutable owner;\\n    address[] public funders;\\n    AggregatorV3Interface priceFeed;\\n\\n    constructor(address priceFeedAddress) public {\\n        owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n\\n    /*\\n    function getVersion() public view returns(uint256){\\n        AggregatorV3Interface priceFeed= AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);\\n        return priceFeed.version();\\n    }\\n    function getPrice() public view returns(uint256){\\n        AggregatorV3Interface pricefeed=AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);\\n        (,int256 answer,,,)=pricefeed.latestRoundData();\\n        return uint256(answer*10000000000);\\n    }\\n    function getConversionRate(uint256 ethAmount) public view returns (uint256){\\n        uint256 ethPrice=getPrice();\\n        uint256 ethAmountInUSD=(ethPrice*ethAmount)/1000000000000000000;\\n        return ethAmountInUSD;\\n    }\\n    */\\n    modifier onlyOwner() {\\n        //require(msg.sender==owner,\\\"Sender is not Owner\\\");\\n        if (msg.sender != owner) {\\n            revert FundMe_NotOwner();\\n        }\\n        _;\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        /*\\n        address payable recipient=payable(msg.sender);\\n        recipient.transfer(address(this).balance);\\n        */\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        //transfer\\n        //payable(msg.sender).transfer(address(this).balance);\\n        //send\\n        //bool sendSuccess=payable(msg.sender).send(address(this).balance);\\n        //require(sendSuccess,\\\"Send Failed\\\");\\n        //call\\n        (bool callSuccess, bytes memory dataReturned) = payable(msg.sender)\\n            .call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"call Failed\\\");\\n    }\\n\\n    function WithdrawA(uint256 amount) public payable onlyOwner {\\n        (bool callSuccess, bytes memory dataReturned) = payable(msg.sender)\\n            .call{value: amount}(\\\"\\\");\\n        require(callSuccess, \\\"call Failed\\\");\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return owner;\\n    }\\n}\\n\",\"keccak256\":\"0x8897116fa576890ab42e98f2160faaf775f8c1b367160421a0445ed0c368b997\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getVersion() internal view returns (uint256) {\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n            0x694AA1769357215DE4FAC081bf1f309aDC325306\\n        );\\n        return priceFeed.version();\\n    }\\n\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        return uint256(answer * 1e10);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUSD = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUSD;\\n    }\\n}\\n\",\"keccak256\":\"0xb491d28ef55d8a5d5b618ad50a4882d2c93f9d579ed7be0bcf3ea4416622faa0\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610b5c380380610b5c83398181016040528101906100329190610110565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100dd826100b2565b9050919050565b6100ed816100d2565b81146100f857600080fd5b50565b60008151905061010a816100e4565b92915050565b600060208284031215610126576101256100ad565b5b6000610134848285016100fb565b91505092915050565b6080516109ef61016d60003960008181610177015281816103cc01528181610506015261052c01526109ef6000f3fe6080604052600436106100705760003560e01c8063893d20e81161004e578063893d20e8146100d85780638da5cb5b14610103578063b60d42881461012e578063dc0d3dff1461013857610070565b80633ccfd60b146100755780633e47d6f31461007f57806376c0110f146100bc575b600080fd5b61007d610175565b005b34801561008b57600080fd5b506100a660048036038101906100a19190610751565b6103b2565b6040516100b39190610797565b60405180910390f35b6100d660048036038101906100d191906107de565b6103ca565b005b3480156100e457600080fd5b506100ed610502565b6040516100fa919061081a565b60405180910390f35b34801561010f57600080fd5b5061011861052a565b604051610125919061081a565b60405180910390f35b61013661054e565b005b34801561014457600080fd5b5061015f600480360381019061015a91906107de565b610608565b60405161016c919061081a565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101fa576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561029f576000600182815481106102205761021f610835565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806001019150506101fd565b50600067ffffffffffffffff8111156102bb576102ba610864565b5b6040519080825280602002602001820160405280156102e95781602001602082028036833780820191505090505b50600190805190602001906102ff929190610647565b506000803373ffffffffffffffffffffffffffffffffffffffff1647604051610327906108c4565b60006040518083038185875af1925050503d8060008114610364576040519150601f19603f3d011682016040523d82523d6000602084013e610369565b606091505b5091509150816103ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a590610936565b60405180910390fd5b5050565b60006020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461044f576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1683604051610476906108c4565b60006040518083038185875af1925050503d80600081146104b3576040519150601f19603f3d011682016040523d82523d6000602084013e6104b8565b606091505b5091509150816104fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f490610936565b60405180910390fd5b505050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461059c9190610985565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6001818154811061061857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8280548282559060005260206000209081019282156106c0579160200282015b828111156106bf5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610667565b5b5090506106cd91906106d1565b5090565b5b808211156106ea5760008160009055506001016106d2565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061071e826106f3565b9050919050565b61072e81610713565b811461073957600080fd5b50565b60008135905061074b81610725565b92915050565b600060208284031215610767576107666106ee565b5b60006107758482850161073c565b91505092915050565b6000819050919050565b6107918161077e565b82525050565b60006020820190506107ac6000830184610788565b92915050565b6107bb8161077e565b81146107c657600080fd5b50565b6000813590506107d8816107b2565b92915050565b6000602082840312156107f4576107f36106ee565b5b6000610802848285016107c9565b91505092915050565b61081481610713565b82525050565b600060208201905061082f600083018461080b565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b60006108ae600083610893565b91506108b98261089e565b600082019050919050565b60006108cf826108a1565b9150819050919050565b600082825260208201905092915050565b7f63616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610920600b836108d9565b915061092b826108ea565b602082019050919050565b6000602082019050818103600083015261094f81610913565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109908261077e565b915061099b8361077e565b92508282019050808211156109b3576109b2610956565b5b9291505056fea2646970667358221220a9ddb234ea27ed541aae93b2b491cf0b327575dee44fda882708ec4627641f2664736f6c63430008180033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c8063893d20e81161004e578063893d20e8146100d85780638da5cb5b14610103578063b60d42881461012e578063dc0d3dff1461013857610070565b80633ccfd60b146100755780633e47d6f31461007f57806376c0110f146100bc575b600080fd5b61007d610175565b005b34801561008b57600080fd5b506100a660048036038101906100a19190610751565b6103b2565b6040516100b39190610797565b60405180910390f35b6100d660048036038101906100d191906107de565b6103ca565b005b3480156100e457600080fd5b506100ed610502565b6040516100fa919061081a565b60405180910390f35b34801561010f57600080fd5b5061011861052a565b604051610125919061081a565b60405180910390f35b61013661054e565b005b34801561014457600080fd5b5061015f600480360381019061015a91906107de565b610608565b60405161016c919061081a565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101fa576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561029f576000600182815481106102205761021f610835565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806001019150506101fd565b50600067ffffffffffffffff8111156102bb576102ba610864565b5b6040519080825280602002602001820160405280156102e95781602001602082028036833780820191505090505b50600190805190602001906102ff929190610647565b506000803373ffffffffffffffffffffffffffffffffffffffff1647604051610327906108c4565b60006040518083038185875af1925050503d8060008114610364576040519150601f19603f3d011682016040523d82523d6000602084013e610369565b606091505b5091509150816103ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a590610936565b60405180910390fd5b5050565b60006020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461044f576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1683604051610476906108c4565b60006040518083038185875af1925050503d80600081146104b3576040519150601f19603f3d011682016040523d82523d6000602084013e6104b8565b606091505b5091509150816104fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f490610936565b60405180910390fd5b505050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461059c9190610985565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6001818154811061061857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8280548282559060005260206000209081019282156106c0579160200282015b828111156106bf5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610667565b5b5090506106cd91906106d1565b5090565b5b808211156106ea5760008160009055506001016106d2565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061071e826106f3565b9050919050565b61072e81610713565b811461073957600080fd5b50565b60008135905061074b81610725565b92915050565b600060208284031215610767576107666106ee565b5b60006107758482850161073c565b91505092915050565b6000819050919050565b6107918161077e565b82525050565b60006020820190506107ac6000830184610788565b92915050565b6107bb8161077e565b81146107c657600080fd5b50565b6000813590506107d8816107b2565b92915050565b6000602082840312156107f4576107f36106ee565b5b6000610802848285016107c9565b91505092915050565b61081481610713565b82525050565b600060208201905061082f600083018461080b565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b60006108ae600083610893565b91506108b98261089e565b600082019050919050565b60006108cf826108a1565b9150819050919050565b600082825260208201905092915050565b7f63616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610920600b836108d9565b915061092b826108ea565b602082019050919050565b6000602082019050818103600083015261094f81610913565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109908261077e565b915061099b8361077e565b92508282019050808211156109b3576109b2610956565b5b9291505056fea2646970667358221220a9ddb234ea27ed541aae93b2b491cf0b327575dee44fda882708ec4627641f2664736f6c63430008180033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 57,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}